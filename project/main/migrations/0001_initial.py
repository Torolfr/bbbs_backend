# Generated by Django 3.2.3 on 2021-09-26 04:41

import common.models
import common.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import martor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0004_activitytype_booktype_city_region_tag'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('child', models.CharField(max_length=100, verbose_name='Имя ребёнка')),
                ('together_since', models.DateField(verbose_name='Вместе с')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format='JPEG', help_text='Поддерживаемые форматы jpg, jpeg, gif, png, bmp. Размер до 10 Мб.', keep_meta=True, null=True, quality=100, size=[1280, 720], upload_to='history/', validators=[common.validators.file_size_validator, common.validators.image_extension_validator], verbose_name='Изображение')),
                ('image_url', models.URLField(help_text='Альтернативный способ загрузки изображения. Приоритет у файла.', max_length=192, verbose_name='Ссылка на изображение')),
                ('description', models.TextField(help_text='Отображается над основным текстом статьи.', max_length=1024, verbose_name='Верхний абзац')),
                ('uper_body', martor.models.MartorField(help_text='Текст статьи над слайдером с изображениями. Для выделения абзаца используйте блок Quote (Ctrl + Q).', verbose_name='Текст статьи над слайдером')),
                ('lower_body', martor.models.MartorField(help_text='Текст статьи под слайдером с изображениями. ', verbose_name='Текст статьи под слайдером')),
                ('output_to_main', models.BooleanField(default=False, help_text='Истории с этой меткой будут отображаться на главной странице.', verbose_name='Отображать на главной странице')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Наставник')),
            ],
            options={
                'verbose_name': 'История',
                'verbose_name_plural': 'Истории',
                'ordering': ('-id',),
            },
            bases=(models.Model, common.models.ImageFromUrlMixin),
        ),
        migrations.CreateModel(
            name='Right',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(help_text='Отображается над основным текстом статьи.', max_length=1024, verbose_name='Верхний абзац')),
                ('body', martor.models.MartorField(help_text='Основной текст статьи. Для покраски абзаца используйте блок Quote (Ctrl + Q).', verbose_name='Текст статьи')),
                ('tags', models.ManyToManyField(limit_choices_to={'category': 'Права'}, related_name='rights', to='common.Tag', verbose_name='Тег(и)')),
            ],
            options={
                'verbose_name': 'Право',
                'verbose_name_plural': 'Права',
                'ordering': ('-id',),
            },
            bases=(models.Model, common.models.ImageFromUrlMixin),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=500, verbose_name='Вопрос')),
                ('answer', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Ответ')),
                ('output_to_main', models.BooleanField(default=False, help_text='Вопросы с этой меткой будут отображаться на главной странице.', verbose_name='Отображать на главной странице')),
                ('tags', models.ManyToManyField(limit_choices_to={'category': 'Вопросы'}, related_name='questions', to='common.Tag', verbose_name='Тег(и)')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Комментарий')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format='JPEG', help_text='Поддерживаемые форматы jpg, jpeg, gif, png, bmp. Размер до 10 Мб.', keep_meta=True, null=True, quality=100, size=[1280, 720], upload_to='places/', validators=[common.validators.file_size_validator, common.validators.image_extension_validator], verbose_name='Изображение')),
                ('image_url', models.URLField(blank=True, help_text='Альтернативный способ загрузки изображения. Приоритет у файла.', null=True, verbose_name='Ссылка на изображение')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Сайт')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мальчик'), ('female', 'Девочка')], max_length=6, verbose_name='Пол ребёнка')),
                ('age', models.SmallIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(8), django.core.validators.MaxValueValidator(25)], verbose_name='Возраст ребёнка')),
                ('age_restriction', models.CharField(choices=[('8-10', '8-10'), ('11-13', '11-13'), ('14-17', '14-17'), ('18', '18+'), ('any', 'Любой')], max_length=50, verbose_name='Целевой возраст')),
                ('chosen', models.BooleanField(default=False, verbose_name='Выбор наставника')),
                ('output_to_main', models.BooleanField(default=False, help_text='Места с этой меткой будут отображаться на главной странице сайта.', verbose_name='Отображать на главной странице')),
                ('moderation_flag', models.BooleanField(default=False, help_text='Места без этой метки не будут отображаться на сайте.', verbose_name='Отметка о модерации')),
                ('activity_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='places', to='common.activitytype', verbose_name='Вид активности')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='common.city', verbose_name='Город')),
                ('tags', models.ManyToManyField(limit_choices_to={'category': 'Куда пойти'}, related_name='places', to='common.Tag', verbose_name='Тег(и)')),
            ],
            options={
                'verbose_name': 'Куда пойти',
                'verbose_name_plural': 'Куда пойти',
                'ordering': ('-id',),
                'permissions': (('places_in_all_cities', 'Просмотр "Куда пойти" всех городов'),),
            },
            bases=(models.Model, common.models.ImageFromUrlMixin),
        ),
        migrations.CreateModel(
            name='HistoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок вывода')),
                ('history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.history', verbose_name='История')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='histories', to='common.image', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Изображение в слайдере',
                'verbose_name_plural': 'Изображения в слайдере',
                'ordering': ('order',),
            },
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['moderation_flag', 'city'], name='main_place_moderat_334319_idx'),
        ),
        migrations.AddConstraint(
            model_name='history',
            constraint=models.UniqueConstraint(fields=('mentor', 'child'), name='mentor_and_child_uniq_together'),
        ),
    ]
